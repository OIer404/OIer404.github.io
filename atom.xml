<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lzy&#39;s space</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lzylzy.cf/"/>
  <updated>2020-07-16T12:37:25.734Z</updated>
  <id>http://lzylzy.cf/</id>
  
  <author>
    <name>lzy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>P4913 【深基16.例3】二叉树深度</title>
    <link href="http://lzylzy.cf/posts/32e85e5a/"/>
    <id>http://lzylzy.cf/posts/32e85e5a/</id>
    <published>2020-07-16T12:36:23.000Z</published>
    <updated>2020-07-16T12:37:25.734Z</updated>
    
    <content type="html"><![CDATA[<p>可以建树之后进行dfs求出每个节点的深度找最大值</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1000009</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; son[maxn];</span><br><span class="line"><span class="keyword">int</span> ans=-inf;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> now,<span class="keyword">int</span> dep)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">ans=max(ans,dep);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;son[now].size();i++)</span><br><span class="line">{</span><br><span class="line">dfs(son[now][i],dep+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">if</span>(x!=<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">son[i].push_back(x);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(y!=<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">son[i].push_back(y);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;可以建树之后进行dfs求出每个节点的深度找最大值&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
    
      <category term="code" scheme="http://lzylzy.cf/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>P1102 A-B 数对</title>
    <link href="http://lzylzy.cf/posts/48d1c4ef/"/>
    <id>http://lzylzy.cf/posts/48d1c4ef/</id>
    <published>2020-07-16T12:35:07.000Z</published>
    <updated>2020-07-16T12:36:00.465Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="comment">//转化题目 </span></span><br><span class="line"><span class="comment">//把数列从小到大排序，每次求ai+C出现了几次 </span></span><br><span class="line"><span class="comment">//可以用upperbound-lowerbound实现 </span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">200009</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> n,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;c);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line">ans+=upper_bound(a+<span class="number">1</span>,a+<span class="number">1</span>+n,a[i]+c)-lower_bound(a+<span class="number">1</span>,a+<span class="number">1</span>+n,a[i]+c);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P1918 保龄球 </title>
    <link href="http://lzylzy.cf/posts/68dc17be/"/>
    <id>http://lzylzy.cf/posts/68dc17be/</id>
    <published>2020-07-16T12:32:39.000Z</published>
    <updated>2020-07-16T12:34:12.039Z</updated>
    
    <content type="html"><![CDATA[<p>大意是输入一个数组a</p><p>求x在a中出现的位置</p><p>可以用map映射int解决</p><p>或者是离散化</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">mp[x]=i;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mp.count(x)?mp[x]:<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大意是输入一个数组a&lt;/p&gt;
&lt;p&gt;求x在a中出现的位置&lt;/p&gt;
&lt;p&gt;可以用map映射int解决&lt;/p&gt;
&lt;p&gt;或者是离散化&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P1030 求先序排列</title>
    <link href="http://lzylzy.cf/posts/39eaac2a/"/>
    <id>http://lzylzy.cf/posts/39eaac2a/</id>
    <published>2020-07-16T12:29:39.000Z</published>
    <updated>2020-07-16T12:31:38.030Z</updated>
    
    <content type="html"><![CDATA[<p>模拟了好一大通 QAQ</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">先序遍历：根左右 </span></span><br><span class="line"><span class="comment">中序遍历：左根右 </span></span><br><span class="line"><span class="comment">后序遍历：左右根 </span></span><br><span class="line"><span class="comment">可以直接求出根，在中序遍历里找出左右儿子，继续递归 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="built_in">string</span> s1,s2; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> l2,<span class="keyword">int</span> r2)</span><span class="comment">//对应s1,s2的哪个区间 </span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s2[r2];<span class="comment">//s2最后一个直接是根 </span></span><br><span class="line"><span class="keyword">int</span> pos=s1.find(s2[r2]);<span class="comment">//找出根在s1里的位置 </span></span><br><span class="line"><span class="keyword">int</span> sizel=pos-l;</span><br><span class="line"><span class="keyword">int</span> sizer=r-l+<span class="number">1</span><span class="number">-1</span>-sizel;</span><br><span class="line"><span class="keyword">if</span>(sizel&gt;<span class="number">0</span>)dfs(l,l+sizel<span class="number">-1</span>,l2,l2+sizel<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(sizer&gt;<span class="number">0</span>)dfs(l+sizel+<span class="number">1</span>,r,l2+sizel,r2<span class="number">-1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s1&gt;&gt;s2;</span><br><span class="line"><span class="keyword">int</span> len=s1.size()<span class="number">-1</span>;</span><br><span class="line">dfs(<span class="number">0</span>,len,<span class="number">0</span>,len);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;模拟了好一大通 QAQ&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P1347 排序</title>
    <link href="http://lzylzy.cf/posts/b60d629/"/>
    <id>http://lzylzy.cf/posts/b60d629/</id>
    <published>2020-07-14T11:29:39.000Z</published>
    <updated>2020-07-14T11:32:15.793Z</updated>
    
    <content type="html"><![CDATA[<p>一道拓扑排序题，<del>但是我不会</del></p><p>由于数据范围小得吓人，可以每读入一个关系就进行一遍topsort</p><p>如果发现条件不足就继续读入，矛盾或者遍历成功就直接结束</p><p>如果读入完了还是条件不足，那就是条件不足了</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 29</span></span><br><span class="line"><span class="keyword">int</span> b[maxn][maxn];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">b[i][j]=1 i&gt;j</span></span><br><span class="line"><span class="comment">b[i][j]=-1 i&lt;j</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; son[maxn],id[maxn];</span><br><span class="line"><span class="keyword">int</span> inn[maxn],in[maxn];</span><br><span class="line"><span class="keyword">bool</span> app[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="keyword">int</span> oo=inf;</span><br><span class="line"><span class="keyword">int</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(fa[x]==x)<span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> fa[x]=Find(fa[x]); </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">topsort</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">memcpy</span>(in,inn,<span class="keyword">sizeof</span>(inn));</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"><span class="keyword">int</span> ns=inf;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(in[i]==<span class="number">0</span>&amp;&amp;app[i])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(ns!=inf)</span><br><span class="line">{</span><br><span class="line">res=<span class="number">0</span>;<span class="comment">//条件不足 </span></span><br><span class="line">}</span><br><span class="line">q.push(i);</span><br><span class="line">ns=i;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(ns==inf)<span class="comment">//有矛盾 </span></span><br><span class="line">{</span><br><span class="line">res=<span class="number">-1</span>;</span><br><span class="line"> } </span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x=q.front();</span><br><span class="line">q.pop();</span><br><span class="line">ans.push(x);</span><br><span class="line"><span class="comment">//cout&lt;&lt;x&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(ans.size()==n&amp;&amp;res==<span class="number">1</span>)<span class="comment">//全部入队 </span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Sorted sequence determined after %d relations: "</span>,k);</span><br><span class="line"><span class="keyword">while</span>(!ans.empty())</span><br><span class="line">{</span><br><span class="line"><span class="built_in">putchar</span>((<span class="keyword">char</span>)(ans.front()+<span class="string">'A'</span>));</span><br><span class="line">ans.pop();</span><br><span class="line">}</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'.'</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">bool</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;son[x].size();i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> to=son[x][i];</span><br><span class="line">in[to]--;</span><br><span class="line"><span class="keyword">if</span>(in[to]==<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">q.push(to);</span><br><span class="line"><span class="keyword">if</span>(p)res=<span class="number">0</span>;<span class="comment">//条件不足 </span></span><br><span class="line">p=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(ans.size()!=cnt||res==<span class="number">-1</span>)<span class="comment">//没能遍历当前的图 说明有环 </span></span><br><span class="line">{</span><br><span class="line"> <span class="built_in">printf</span>(<span class="string">"Inconsistency found after %d relations."</span>,k);</span><br><span class="line"> <span class="built_in">exit</span>(<span class="number">0</span>); </span><br><span class="line">}</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">int</span> s=inf;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)fa[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">4</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,a);</span><br><span class="line"><span class="keyword">int</span> x=a[<span class="number">0</span>]-<span class="string">'A'</span>,y=a[<span class="number">2</span>]-<span class="string">'A'</span>;</span><br><span class="line">cnt+=(!app[x])+(!app[y]);</span><br><span class="line">app[x]=<span class="number">1</span>,app[y]=<span class="number">1</span>;</span><br><span class="line">s=min(s,min(x,y));</span><br><span class="line">fa[Find(x)]=Find(y);</span><br><span class="line"><span class="keyword">if</span>(x==y)<span class="comment">//自环 </span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Inconsistency found after %d relations.\n"</span>,i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(b[x][y]==<span class="number">0</span>)</span><br><span class="line">{</span><br><span class="line">b[x][y]=<span class="number">-1</span>;</span><br><span class="line">b[y][x]=<span class="number">1</span>;</span><br><span class="line">son[x].push_back(y);</span><br><span class="line">id[x].push_back(i);</span><br><span class="line">inn[y]++;</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(b[x][y]==<span class="number">-1</span>)<span class="comment">//重边 </span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">}<span class="keyword">else</span><span class="comment">//矛盾 </span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Inconsistency found after %d relations.\n"</span>,i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">topsort(i);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Sorted sequence cannot be determined.\n"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;一道拓扑排序题，&lt;del&gt;但是我不会&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;由于数据范围小得吓人，可以每读入一个关系就进行一遍topsort&lt;/p&gt;
&lt;p&gt;如果发现条件不足就继续读入，矛盾或者遍历成功就直接结束&lt;/p&gt;
&lt;p&gt;如果读入完了还是条件不足，那就是条件不足了&lt;/p&gt;
&lt;fig
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P1127 词链</title>
    <link href="http://lzylzy.cf/posts/aedc3926/"/>
    <id>http://lzylzy.cf/posts/aedc3926/</id>
    <published>2020-07-13T10:32:41.000Z</published>
    <updated>2020-07-13T10:34:54.903Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1009</span></span><br><span class="line"><span class="built_in">string</span> x[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; son[maxn],num[maxn];</span><br><span class="line"><span class="keyword">int</span> h[maxn];<span class="comment">//出现次数 </span></span><br><span class="line"><span class="keyword">int</span> t[maxn];</span><br><span class="line"><span class="comment">//作为首次出现的 入度比出度大1 </span></span><br><span class="line"><span class="comment">//要是找不到 就按照第一个来</span></span><br><span class="line"><span class="comment">//剩下部分通过搜索解决</span></span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> rt,<span class="built_in">string</span> now,<span class="keyword">int</span> tot)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//cout&lt;&lt;rt&lt;&lt;" "&lt;&lt;now&lt;&lt;" "&lt;&lt;tot&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(ok)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(tot==n)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;now&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">ok=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;son[rt].size();i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> to=son[rt][i];</span><br><span class="line"><span class="keyword">int</span> nt=num[rt][i];</span><br><span class="line"><span class="keyword">if</span>(vis[nt])<span class="keyword">continue</span>;</span><br><span class="line">vis[nt]=<span class="number">1</span>;</span><br><span class="line">dfs(to,now+<span class="string">"."</span>+x[nt],tot+<span class="number">1</span>);</span><br><span class="line">vis[nt]=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> fa[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(fa[x]==x)<span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> fa[x]=Find(fa[x]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">bool</span> app[<span class="number">99</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)fa[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//连边 </span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;x[i];</span><br><span class="line">}</span><br><span class="line">sort(x+<span class="number">1</span>,x+<span class="number">1</span>+n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"></span><br><span class="line">son[x[i][<span class="number">0</span>]-<span class="string">'a'</span>].push_back(x[i][x[i].size()<span class="number">-1</span>]-<span class="string">'a'</span>);</span><br><span class="line">num[x[i][<span class="number">0</span>]-<span class="string">'a'</span>].push_back(i);</span><br><span class="line">h[x[i][<span class="number">0</span>]-<span class="string">'a'</span>]++;</span><br><span class="line">t[x[i][x[i].size()<span class="number">-1</span>]-<span class="string">'a'</span>]++;</span><br><span class="line">app[x[i][x[i].size()<span class="number">-1</span>]-<span class="string">'a'</span>]=<span class="number">1</span>;</span><br><span class="line">app[x[i][<span class="number">0</span>]-<span class="string">'a'</span>]=<span class="number">1</span>;</span><br><span class="line">fa[x[i][<span class="number">0</span>]-<span class="string">'a'</span>]=Find(x[i][x[i].size()<span class="number">-1</span>]-<span class="string">'a'</span>);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//确定第一个出现的 </span></span><br><span class="line"><span class="keyword">int</span> af=-inf;</span><br><span class="line"><span class="keyword">int</span> s=x[<span class="number">1</span>][<span class="number">0</span>]-<span class="string">'a'</span>;<span class="comment">//默认1 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(app[i])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(af==-inf)af=Find(i);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(Find(i)!=af)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"***"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(h[i]-t[i]==<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line">s=i;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">1</span>;i++)</span><br><span class="line">{</span><br><span class="line">vis[num[s][i]]=<span class="number">1</span>;</span><br><span class="line">dfs(son[s][i],x[num[s][i]],<span class="number">1</span>);</span><br><span class="line">vis[num[s][i]]=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(!ok)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"***"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P1801 黑匣子</title>
    <link href="http://lzylzy.cf/posts/fd017f76/"/>
    <id>http://lzylzy.cf/posts/fd017f76/</id>
    <published>2020-07-12T07:00:02.000Z</published>
    <updated>2020-07-12T07:02:48.558Z</updated>
    
    <content type="html"><![CDATA[<p>对顶堆</p><p>发现i是单调不降的，可以使用对顶堆解决问题</p><p>类似问题：P1168中位数</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt; q2;<span class="comment">//小的在上头</span></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; q1;<span class="comment">//大的在上头，大小控制为i </span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">200009</span>],t[<span class="number">200009</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//freopen("h.in","r",stdin);</span></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line"><span class="keyword">for</span>(;j&lt;=x;j++)</span><br><span class="line">{</span><br><span class="line">q1.push(a[j]);</span><br><span class="line"><span class="keyword">while</span>(q1.size()&lt;i)<span class="comment">//保证q1的长度为i</span></span><br><span class="line">{</span><br><span class="line">q1.push(q2.top());</span><br><span class="line">q2.pop();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(q1.size()&gt;i)</span><br><span class="line">{</span><br><span class="line">q2.push(q1.top());</span><br><span class="line">q1.pop();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(!q1.empty()&amp;&amp;!q2.empty()&amp;&amp;q1.top()&gt;q2.top())<span class="comment">//保证q1的top更小</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> l=q1.top(),k=q2.top();</span><br><span class="line">q1.pop();q2.pop();</span><br><span class="line">q2.push(l);q1.push(k);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//printf("i:%dj:%d %d\n",i,j,q1.top());</span></span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(q1.size()&lt;i)</span><br><span class="line">{</span><br><span class="line">q1.push(q2.top());</span><br><span class="line">q2.pop();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(q1.size()&gt;i)</span><br><span class="line">{</span><br><span class="line">q2.push(q1.top());</span><br><span class="line">q1.pop();</span><br><span class="line">}</span><br><span class="line"><span class="keyword">while</span>(!q1.empty()&amp;&amp;!q2.empty()&amp;&amp;q1.top()&gt;q2.top())</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> l=q1.top(),k=q2.top();</span><br><span class="line">q1.pop();q2.pop();</span><br><span class="line">q2.push(l);q1.push(k);</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,q1.top());</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;对顶堆&lt;/p&gt;
&lt;p&gt;发现i是单调不降的，可以使用对顶堆解决问题&lt;/p&gt;
&lt;p&gt;类似问题：P1168中位数&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>myx</title>
    <link href="http://lzylzy.cf/posts/1f6dbad0/"/>
    <id>http://lzylzy.cf/posts/1f6dbad0/</id>
    <published>2020-07-10T09:22:08.000Z</published>
    <updated>2020-07-10T13:30:27.510Z</updated>
    
    <content type="html"><![CDATA[<p>愿君一路星光、前程似锦，所得皆所愿、扬帆起远航、不负青春梦！他日江湖再相见，历经千帆仍少年～</p><center>李佩璇</center><p>祝愿帅气的马宇轩同学在新的学校里闪闪发光，熠熠生辉，实现自己的理想，学业有成，前程似锦，一路星光！</p><center>王一诺</center><p>也许这是短暂的两年吧，未来的道路依然漫长。愿我们都能 “长风破浪会有时，直挂云帆济沧海”。希望这份情谊，永存。</p><center>lzy</center><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/myx/m.jpg" alt="m" title="">                </div>                <div class="image-caption">m</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/myx/f.jpg" alt="f" title="">                </div>                <div class="image-caption">f</div>            </figure><video src="/myx/e.mp4"></video><video src="/myx/a.MOV"></video><video src="/myx/c.mp4"></video><video src="/myx/d.mp4"></video><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/myx/b.jpg" alt="b" title="">                </div>                <div class="image-caption">b</div>            </figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;愿君一路星光、前程似锦，所得皆所愿、扬帆起远航、不负青春梦！他日江湖再相见，历经千帆仍少年～&lt;/p&gt;
&lt;center&gt;李佩璇&lt;/center&gt;



&lt;p&gt;祝愿帅气的马宇轩同学在新的学校里闪闪发光，熠熠生辉，实现自己的理想，学业有成，前程似锦，一路星光！&lt;/p&gt;
&lt;cent
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P1621 集合</title>
    <link href="http://lzylzy.cf/posts/2f1e5e04/"/>
    <id>http://lzylzy.cf/posts/2f1e5e04/</id>
    <published>2020-06-21T10:58:12.000Z</published>
    <updated>2020-06-21T10:59:52.786Z</updated>
    
    <content type="html"><![CDATA[<p>用埃筛枚举质数作为质因子，看看能不能变成区间里的数字</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> fa[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> v[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> a,b,p,s=<span class="number">0</span>;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(x==fa[x])<span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">return</span> fa[x]=Find(fa[x]);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;p);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=b;i++)fa[i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=b;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(!v[i])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=b;j+=i)</span><br><span class="line">{</span><br><span class="line">v[j]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i&gt;=p&amp;&amp;j-i&gt;=a)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(Find(j)!=Find(j-i))</span><br><span class="line">{</span><br><span class="line">fa[Find(j)]=Find(j-i);</span><br><span class="line">s++;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,b-a+<span class="number">1</span>-s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;用埃筛枚举质数作为质因子，看看能不能变成区间里的数字&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;sp
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P3613 【深基15.例2】寄包柜</title>
    <link href="http://lzylzy.cf/posts/5d1bcc2a/"/>
    <id>http://lzylzy.cf/posts/5d1bcc2a/</id>
    <published>2020-06-21T10:57:21.000Z</published>
    <updated>2020-06-21T10:59:52.793Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="built_in">map</span>&lt;pair&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;,<span class="keyword">int</span>&gt; mp;<span class="comment">//直接用map映射pair实现 </span></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">while</span>(m--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> opt,x,y,z;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;opt,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;z);</span><br><span class="line">mp[make_pair(x,y)]=z;</span><br><span class="line">}<span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mp.count(make_pair(x,y))==<span class="number">0</span>?<span class="number">0</span>:mp[make_pair(x,y)]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P4715 【深基16.例1】淘汰赛</title>
    <link href="http://lzylzy.cf/posts/27fe52af/"/>
    <id>http://lzylzy.cf/posts/27fe52af/</id>
    <published>2020-06-21T10:56:09.000Z</published>
    <updated>2020-06-21T10:59:52.797Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">250</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">n=<span class="number">1</span>&lt;&lt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//上半区的最大值   下半区的最大值  两个中较小的一个就是答案 </span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;max_element(a,a+n/<span class="number">2</span>)-max_element(a,a+n)+max_element(a+n/<span class="number">2</span>,a+n)-a+<span class="number">1</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P3884 [JLOI2009]二叉树问题</title>
    <link href="http://lzylzy.cf/posts/13a5bcc7/"/>
    <id>http://lzylzy.cf/posts/13a5bcc7/</id>
    <published>2020-06-21T10:55:20.000Z</published>
    <updated>2020-06-21T10:59:52.795Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> c[<span class="number">120</span>],d[<span class="number">120</span>],f[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> x,y,n;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">int</span> md=<span class="number">0</span>;</span><br><span class="line">c[d[<span class="number">1</span>]]++; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">f[y]=x;</span><br><span class="line">d[y]=d[x]+<span class="number">1</span>; </span><br><span class="line">md=max(md,d[y]);</span><br><span class="line">c[d[y]]++;<span class="comment">//宽度就是某一个深度的节点个数 </span></span><br><span class="line">}<span class="keyword">int</span> mc=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)mc=max(mc,c[i]);</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">int</span> z=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(x!=y)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(d[x]&lt;d[y])</span><br><span class="line">{</span><br><span class="line">y=f[y];</span><br><span class="line">z++;</span><br><span class="line">}<span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">x=f[x];</span><br><span class="line">z+=<span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n%d\n%d"</span>,md+<span class="number">1</span>,mc,z);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P1364 医院设置</title>
    <link href="http://lzylzy.cf/posts/d3586754/"/>
    <id>http://lzylzy.cf/posts/d3586754/</id>
    <published>2020-06-21T10:54:30.000Z</published>
    <updated>2020-06-21T10:59:52.790Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> s[<span class="number">120</span>];<span class="comment">//size</span></span><br><span class="line"><span class="keyword">int</span> f[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> l[<span class="number">120</span>];<span class="comment">//lson</span></span><br><span class="line"><span class="keyword">int</span> r[<span class="number">120</span>];<span class="comment">//rson</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(x)</span><br><span class="line">{</span><br><span class="line">dfs(l[x]);</span><br><span class="line">s[x]+=s[l[x]];</span><br><span class="line">f[x]+=f[l[x]]+s[l[x]];</span><br><span class="line">dfs(r[x]);</span><br><span class="line">s[x]+=s[r[x]];</span><br><span class="line">f[x]+=f[r[x]]+s[r[x]];</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;s[i],&amp;l[i],&amp;r[i]);</span><br><span class="line">}</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> x=<span class="number">1</span>,z=f[x];</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(s[l[x]]*<span class="number">2</span>&gt;s[<span class="number">1</span>])<span class="comment">//左边人多，他的两倍比总人数多 </span></span><br><span class="line">{</span><br><span class="line">z+=s[<span class="number">1</span>]<span class="number">-2</span>*s[l[x]];<span class="comment">//往左走 </span></span><br><span class="line">x=l[x]; </span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(s[r[x]]*<span class="number">2</span>&gt;s[<span class="number">1</span>])<span class="comment">//同理往右 </span></span><br><span class="line">{</span><br><span class="line">z+=s[<span class="number">1</span>]<span class="number">-2</span>*s[r[x]];</span><br><span class="line">x=r[x];</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">break</span>; </span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,z);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P1160 队列安排</title>
    <link href="http://lzylzy.cf/posts/b71d7c5c/"/>
    <id>http://lzylzy.cf/posts/b71d7c5c/</id>
    <published>2020-06-21T08:48:39.000Z</published>
    <updated>2020-06-21T10:59:52.784Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100020</span></span><br><span class="line"><span class="keyword">int</span> l[maxn],r[maxn],v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(!x)<span class="keyword">return</span>;</span><br><span class="line">dfs(l[x]);</span><br><span class="line"><span class="keyword">if</span>(!v[x])<span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">dfs(r[x]);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">0</span>)<span class="comment">//加入，替换掉原来这个位置的人把他接到这个加入的人后面 </span></span><br><span class="line">{</span><br><span class="line">l[i]=l[x];</span><br><span class="line">l[x]=i;</span><br><span class="line">}<span class="keyword">else</span><span class="comment">//同理 </span></span><br><span class="line">{</span><br><span class="line">r[i]=r[x];</span><br><span class="line">r[x]=i;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">v[x]=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P4387【深基15.习9】验证栈序列</title>
    <link href="http://lzylzy.cf/posts/b494a7bf/"/>
    <id>http://lzylzy.cf/posts/b494a7bf/</id>
    <published>2020-06-21T08:27:48.000Z</published>
    <updated>2020-06-21T08:28:24.262Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="comment">//一直push，直到匹配到一个pop </span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">栗子： </span></span><br><span class="line"><span class="comment">1 2 3 4 5</span></span><br><span class="line"><span class="comment">5 4 3 2 1</span></span><br><span class="line"><span class="comment">用一个栈模拟，一直入队直到当前入队的是出栈队列的第一项 </span></span><br><span class="line"><span class="comment">出栈，继续模拟 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> s[<span class="number">200020</span>],ss;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100020</span>]; </span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--)</span><br><span class="line">{</span><br><span class="line">ss=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="keyword">sizeof</span>(s));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line"><span class="keyword">while</span>(i&lt;n&amp;&amp;(s[ss]!=x))</span><br><span class="line">{</span><br><span class="line">s[++ss]=a[i++];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(s[ss]==x)</span><br><span class="line">{</span><br><span class="line">ss--;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">puts</span>(ss&gt;<span class="number">0</span>?<span class="string">"No"</span>:<span class="string">"Yes"</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P5250【深基17.例5】木材仓库</title>
    <link href="http://lzylzy.cf/posts/9462a6a7/"/>
    <id>http://lzylzy.cf/posts/9462a6a7/</id>
    <published>2020-06-21T07:22:54.000Z</published>
    <updated>2020-06-21T07:35:17.971Z</updated>
    
    <content type="html"><![CDATA[<p>水一发板子题</p><p>合理使用map和c++11</p><p>auto类型可以自动识别，在c++11下，可以节省很多代码</p><p>这里用auto代替了iterator</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">map</span> &lt;<span class="built_in">string</span>,<span class="keyword">int</span>&gt; mp;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">while</span>(n--)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> opt;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;opt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="keyword">int</span> sc;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;name&gt;&gt;sc;</span><br><span class="line">mp[name]=sc;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"OK"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(opt!=<span class="number">4</span>)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">string</span> name;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;name;</span><br><span class="line"><span class="keyword">auto</span>  it=mp.find(name);</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">2</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(it!=mp.end())</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;mp[name]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">}<span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Not found"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}<span class="keyword">else</span> <span class="keyword">if</span>(opt==<span class="number">3</span>)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(it!=mp.end())</span><br><span class="line">{</span><br><span class="line">mp.erase(name);</span><br><span class="line">                    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Deleted successfully"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">}<span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Not found"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}<span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;mp.size()&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"> } </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//c++11</span></span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;水一发板子题&lt;/p&gt;
&lt;p&gt;合理使用map和c++11&lt;/p&gt;
&lt;p&gt;auto类型可以自动识别，在c++11下，可以节省很多代码&lt;/p&gt;
&lt;p&gt;这里用auto代替了iterator&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbod
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>如何安全的举报自己的学校？</title>
    <link href="http://lzylzy.cf/posts/ada246ea/"/>
    <id>http://lzylzy.cf/posts/ada246ea/</id>
    <published>2020-05-21T13:39:08.000Z</published>
    <updated>2020-06-21T05:07:35.032Z</updated>
    
    <content type="html"><![CDATA[<p>蒟蒻开学了emm</p><p>今天教教大家两种安全举报学校的方法</p><h1 id="法1"><a href="#法1" class="headerlink" title="法1"></a>法1</h1><h4 id="首先，找到你所在省-市的教育主管部门"><a href="#首先，找到你所在省-市的教育主管部门" class="headerlink" title="首先，找到你所在省/市的教育主管部门"></a>首先，找到你所在省/市的教育主管部门</h4><p>由于咱们是山东人，所以找到山东省教育厅:<a href="http://edu.shandong.gov.cn/" target="_blank" rel="noopener">http://edu.shandong.gov.cn/</a></p><p><strong>重点，什么信访条例，什么匿名不公开，全部是假的，举报不能留下任何个人身份信息，包括自己的ip地址</strong></p><h4 id="接下来，连接到VPN"><a href="#接下来，连接到VPN" class="headerlink" title="接下来，连接到VPN"></a>接下来，连接到VPN</h4><p>是的，<del>根据前人的惨痛教训</del>你的IP可能会被卖掉</p><p>这边奉上百度第一条<a href="https://www.xicidaili.com/nn/" target="_blank" rel="noopener">https://www.xicidaili.com/nn/</a></p><p>最好是高匿代理，国内外都可</p><p><strong>注意，有很多代理简直上不了网，可以多试几个，另外不要输入敏感信息，因为你所有联网的数据都会发送给代理服务器，最好退掉微信QQ啥的，搞完之后一定断开代理</strong></p><p>连接方法：</p><p>PC：<a href="https://jingyan.baidu.com/article/6fb756ec5f5dd4241858fb85.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/6fb756ec5f5dd4241858fb85.html</a></p><p>手机：<a href="https://jingyan.baidu.com/article/6fb756ec5f5dd4241858fb85.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/6fb756ec5f5dd4241858fb85.html</a></p><h4 id="填写信息"><a href="#填写信息" class="headerlink" title="填写信息"></a>填写信息</h4><p>这边山东省教育厅需要点击“留言咨询”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/school/a.JPG" alt="a" title="">                </div>                <div class="image-caption">a</div>            </figure><p>姓名瞎编，手机号和邮箱一定要使用<strong>临时的</strong></p><p>这边有一篇推荐临时邮箱的文章：<a href="https://www.jianshu.com/p/adc971eb5cfe" target="_blank" rel="noopener">https://www.jianshu.com/p/adc971eb5cfe</a></p><p><a href="https://temp-mail.org/" target="_blank" rel="noopener">https://temp-mail.org/</a></p><p>这个我觉得速度还行，其他的要么时间短，要么上不去</p><p>临时手机号来这里：<a href="https://www.materialtools.com/" target="_blank" rel="noopener">https://www.materialtools.com/</a></p><p>证件的话，<strong>如果必须填真实的，不要写你自己或者家人，最好找一个和你们学校和你关系不大的人，当然，搞个假的最好</strong></p><p>剩下的大家随意发挥，切记不要留下任何真实信息（除了举报内容</p><p>本方法有一定暴露风险~不过应该不大，我觉得防护措施已经足够严密了2333</p><p><del>小心内鬼</del></p><h1 id="法2"><a href="#法2" class="headerlink" title="法2"></a>法2</h1><p>写封信不就完了</p><p>不要留下真实信息，直接寄到教育局，谁都查不出来hhhh</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;蒟蒻开学了emm&lt;/p&gt;
&lt;p&gt;今天教教大家两种安全举报学校的方法&lt;/p&gt;
&lt;h1 id=&quot;法1&quot;&gt;&lt;a href=&quot;#法1&quot; class=&quot;headerlink&quot; title=&quot;法1&quot;&gt;&lt;/a&gt;法1&lt;/h1&gt;&lt;h4 id=&quot;首先，找到你所在省-市的教育主管部门&quot;&gt;&lt;a h
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>CF1178D Prime Graph</title>
    <link href="http://lzylzy.cf/posts/2a07be94/"/>
    <id>http://lzylzy.cf/posts/2a07be94/</id>
    <published>2020-05-21T13:38:00.000Z</published>
    <updated>2020-05-21T14:00:08.104Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">显然1000以内，n到3/2n中肯定有一个质数（没有证明，但是可以枚举试试 </span></span><br><span class="line"><span class="comment">所以 先把n个点连成环，在中间两点之间加边，每个点的度为2或3，控制边数是个质数就可以 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Prime</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="built_in">sqrt</span>(x);i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(x%i==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line"><span class="keyword">int</span> m=n;</span><br><span class="line"><span class="keyword">while</span>(!Prime(m))</span><br><span class="line">{</span><br><span class="line">m++;</span><br><span class="line">}</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;m&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&gt;n)x=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;x&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m-n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">" "</span>&lt;&lt;n/<span class="number">2</span>+i&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>CF1220D Alex and Julian</title>
    <link href="http://lzylzy.cf/posts/ed89373b/"/>
    <id>http://lzylzy.cf/posts/ed89373b/</id>
    <published>2020-05-19T12:49:46.000Z</published>
    <updated>2020-05-19T13:37:25.360Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前置知识：二分图的判定"><a href="#前置知识：二分图的判定" class="headerlink" title="前置知识：二分图的判定"></a>前置知识：二分图的判定</h2><p>没有奇环</p><h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>考虑从0开始，$lcm(a,b)$构成的环为奇环</p><script type="math/tex; mode=display">\frac { lcm(a,b)} { a }+\frac{ lcm ( a,b ) } { b}   \equiv 1(mod 2)</script><p>有</p><script type="math/tex; mode=display">\frac{a+b}{gcd(a,b)} \equiv 1(mod  2)</script><p>当且仅当a,b中2的因子个数相等时，ab无法构成奇环，这种情况下$\frac{a}{gcd(a,b)}$和$\frac{b}{gcd(a,b)}$都是奇数</p><p><strong>（本句话引自lg大佬，不会可以手动验证，好好想，蒟蒻数学这么差都想通了，画画图）</strong></p><p>也就是说，对于任意两个数字，如果他们的lowbit相等，他们不会构成奇环</p><p>于是问题变成了 求n个数中lowbit相等的数字最多有多少个</p><p>code:</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 200009</span></span><br><span class="line">ll a[maxn]; </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) (x&amp;(-x))</span></span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt; num[<span class="number">69</span>];</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//两个数lowbit相同就可以保留 </span></span><br><span class="line"><span class="comment">//直接枚举lowbit？</span></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>,w;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">60</span>;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> s=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">{</span><br><span class="line"><span class="comment">//cout&lt;&lt;lowbit(a[j])&lt;&lt;" "&lt;&lt;(1&lt;&lt;i)&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(lowbit(a[j])==(<span class="number">1l</span>l&lt;&lt;i))</span><br><span class="line">{</span><br><span class="line">s++;</span><br><span class="line">}<span class="keyword">else</span></span><br><span class="line">{</span><br><span class="line">num[i].push_back(a[j]);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(s&gt;ans)</span><br><span class="line">{</span><br><span class="line">w=i,ans=s;</span><br><span class="line">}</span><br><span class="line"> } </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n-ans);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;num[w].size();i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,num[w][i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前置知识：二分图的判定&quot;&gt;&lt;a href=&quot;#前置知识：二分图的判定&quot; class=&quot;headerlink&quot; title=&quot;前置知识：二分图的判定&quot;&gt;&lt;/a&gt;前置知识：二分图的判定&lt;/h2&gt;&lt;p&gt;没有奇环&lt;/p&gt;
&lt;h2 id=&quot;做法&quot;&gt;&lt;a href=&quot;#做法&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P6275 [USACO20OPEN]Sprinklers 2: Return of the Alfalfa P </title>
    <link href="http://lzylzy.cf/posts/5f2781ba/"/>
    <id>http://lzylzy.cf/posts/5f2781ba/</id>
    <published>2020-05-12T13:41:15.000Z</published>
    <updated>2020-05-12T13:45:43.413Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="6275/6275.png" alt="6275" title="">                </div>                <div class="image-caption">6275</div>            </figure><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//轮廓线dp</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">发现A、C作物之间一定有一条分割线，</span></span><br><span class="line"><span class="comment">分割线的拐角处必须放灌溉器，剩下位置可以不放 </span></span><br><span class="line"><span class="comment">但是如果要放，放的灌溉器种类是一定的 </span></span><br><span class="line"><span class="comment">dp合法轮廓线的数量 </span></span><br><span class="line"><span class="comment">设每一条轮廓线的权值是-2^拐角数量 </span></span><br><span class="line"><span class="comment">每一次转移，如果拐弯了就要除以二 </span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 2009</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int ll</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> c[maxn][maxn];</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inv (500000004)</span></span><br><span class="line"><span class="keyword">int</span> f[maxn][maxn];<span class="comment">//f表示横着来的 </span></span><br><span class="line"><span class="comment">//有什么方法可以转移到f[i][j]?</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">f[i][j-1]-&gt;f[i][j]</span></span><br><span class="line"><span class="comment">g[i][j-1]/2-&gt;f[i][j]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">f[i-1][j]/2-&gt;g[i][j]</span></span><br><span class="line"><span class="comment">g[i-1][j]-&gt;g[i][j]</span></span><br><span class="line"><span class="comment">*/</span> </span><br><span class="line"><span class="keyword">int</span> g[maxn][maxn];<span class="comment">//g表示竖着来的 </span></span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">ll ans=<span class="number">1</span>,base=a;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line">ans*=base;</span><br><span class="line">ans%=mod;</span><br><span class="line">}</span><br><span class="line">base*=base;</span><br><span class="line">base%=mod;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,c[i]+<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;i++)</span><br><span class="line">{</span><br><span class="line">f[<span class="number">1</span>][i]=<span class="number">1</span>;</span><br><span class="line">g[i][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n+<span class="number">1</span>;i++)<span class="comment">//i可以取到n+1 </span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=n+<span class="number">1</span>;j++)</span><br><span class="line">{</span><br><span class="line">f[i][j]=f[i][j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(c[i<span class="number">-1</span>][j<span class="number">-1</span>]!=<span class="string">'W'</span>)<span class="comment">//这边ij从1开始，所以要减一 </span></span><br><span class="line">{</span><br><span class="line">f[i][j]=(f[i][j]+(ll)g[i][j<span class="number">-1</span>]*inv)%mod;</span><br><span class="line">}</span><br><span class="line">g[i][j]=g[i<span class="number">-1</span>][j];</span><br><span class="line"><span class="keyword">if</span>(c[i<span class="number">-1</span>][j<span class="number">-1</span>]!=<span class="string">'W'</span>)</span><br><span class="line">{</span><br><span class="line">g[i][j]=(g[i][j]+(ll)f[i<span class="number">-1</span>][j]*inv)%mod;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//cout&lt;&lt;f[i][j]&lt;&lt;" "&lt;&lt;g[i][j]&lt;&lt;endl;</span></span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> ans=(g[n+<span class="number">1</span>][n+<span class="number">1</span>]+f[n+<span class="number">1</span>][n+<span class="number">1</span>])%mod;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(c[i][j]!=<span class="string">'W'</span>)</span><br><span class="line">{</span><br><span class="line">ans=(ans*<span class="number">2</span>)%mod;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>母亲节快乐！</title>
    <link href="http://lzylzy.cf/posts/c20ab536/"/>
    <id>http://lzylzy.cf/posts/c20ab536/</id>
    <published>2020-05-10T14:32:34.000Z</published>
    <updated>2020-06-21T05:06:29.668Z</updated>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=28875156&amp;auto=0&amp;height=66"></iframe><p>1.妈妈 你把心铺成路，还怕我磕了脚</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/mother/1.jpg" alt="alt" title="">                </div>                <div class="image-caption">alt</div>            </figure> <p>2<br>感谢你不是超人，却为我变成了万能</p><p>3<br>岁月从不败我的美人妈妈 ️ </p><p><img src="/mother/2.jpg" alt="alt"></p><p>4<br>小棉袄会努力成为你的防弹衣</p><p>5<br>你说你是妈妈的防弹衣，后来才知道你是妈妈的催泪弹</p><p>6<br>别问你妈想要什么礼物，她就是想要我这样的女婿(儿媳妇）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/mother/3.webp" alt="alt" title="">                </div>                <div class="image-caption">alt</div>            </figure><p>7<br>听说神不能无处不在，所以创造了妈妈</p><p>8<br>我加倍努力，就是希望成长的脚步，可以赶上您老去的速度</p><p>9<br>曾厌恶你的市侩圆滑，却忘了你也曾松花酿酒，春水煮茶</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/mother/4.gif" alt="alt" title="">                </div>                <div class="image-caption">alt</div>            </figure><p>10<br>从前的愿望是仗剑走天涯，现在只想赖在你身边，听你细数年华</p><p>11<br>整个世界都在催我长大，而你却心疼我的小翅膀</p><p>12<br>羡慕我爸，娶到了世界上最好的女人</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/mother/5.gif" alt="alt" title="">                </div>                <div class="image-caption">alt</div>            </figure><p>13<br>和妈妈吵架的时候，摸摸自己肚子的肉，那是妈妈在外面赚钱养的。</p><p>14<br>这个世界上只有你，愿意包容我的一千种任性。</p><p>15<br>我快快长大，你慢慢变老ᵀᴴᴱ ᴮᴱˢᵀ ᴵˢ ᶠᴼᴿ ᵞᴼᵁ</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;iframe frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; width=&quot;330&quot; height=&quot;86&quot; src=&quot;//music.163.com/outchain/player?type=2&amp;amp
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>P3258</title>
    <link href="http://lzylzy.cf/posts/b173244f/"/>
    <id>http://lzylzy.cf/posts/b173244f/</id>
    <published>2020-05-07T07:24:38.000Z</published>
    <updated>2020-05-08T10:17:07.610Z</updated>
    
    <content type="html"><![CDATA[<p>树剖裸题啦</p><p>每走一次路径+1</p><p>最后一个房间答案-1</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 300005</span></span><br><span class="line"><span class="keyword">int</span> fa[maxn],son[maxn],top[maxn],pos[maxn],dfn[maxn],size[maxn],dep[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>{</span></span><br><span class="line"><span class="keyword">int</span> l,r;</span><br><span class="line"><span class="keyword">int</span> mark;</span><br><span class="line"><span class="keyword">int</span> val;</span><br><span class="line">}tr[maxn*<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">size[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[x].size();i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> to=e[x][i];</span><br><span class="line"><span class="keyword">if</span>(!size[to])</span><br><span class="line">{</span><br><span class="line">dep[to]=dep[x]+<span class="number">1</span>;</span><br><span class="line">fa[to]=x;</span><br><span class="line">dfs(to);</span><br><span class="line">size[x]+=size[to];</span><br><span class="line"><span class="keyword">if</span>(size[son[x]]&lt;size[to])</span><br><span class="line">{</span><br><span class="line">son[x]=to;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> tp)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">cnt++;</span><br><span class="line">pos[x]=cnt;</span><br><span class="line">dfn[cnt]=x;</span><br><span class="line">top[x]=tp;</span><br><span class="line"><span class="keyword">if</span>(son[x]!=<span class="number">0</span>)dfs2(son[x],tp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;e[x].size();i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> to=e[x][i];</span><br><span class="line"><span class="keyword">if</span>(top[to])<span class="keyword">continue</span>;</span><br><span class="line">dfs2(to,to);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Build</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">tr[x].l=l,tr[x].r=r;</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line">{</span><br><span class="line">tr[x].mark=<span class="number">0</span>;</span><br><span class="line">tr[x].val=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">Build(x*<span class="number">2</span>,l,mid);</span><br><span class="line">Build(x*<span class="number">2</span>+<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">tr[x].mark=<span class="number">0</span>;</span><br><span class="line">tr[x].val=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">relese</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(tr[x].l==tr[x].r||<span class="number">0</span>==tr[x].mark)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">int</span> ma=tr[x].mark;</span><br><span class="line"><span class="keyword">int</span> ls=x*<span class="number">2</span>,rs=x*<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> lsl=tr[ls].r-tr[ls].l+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> rsl=tr[rs].r-tr[rs].l+<span class="number">1</span>;</span><br><span class="line">tr[ls].val+=lsl*ma;</span><br><span class="line">tr[ls].mark+=ma;</span><br><span class="line">tr[rs].mark+=ma;</span><br><span class="line">tr[rs].val+=rsl*ma;</span><br><span class="line">tr[x].mark=<span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(l&lt;=tr[x].l&amp;&amp;tr[x].r&lt;=r)</span><br><span class="line">{</span><br><span class="line">tr[x].val+=val*(tr[x].r-tr[x].l+<span class="number">1</span>);</span><br><span class="line">tr[x].mark+=val;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">}</span><br><span class="line">relese(x);</span><br><span class="line"><span class="keyword">int</span> mid=(tr[x].l+tr[x].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(l&lt;=mid)Add(x*<span class="number">2</span>,l,r,val);</span><br><span class="line"><span class="keyword">if</span>(r&gt;mid)Add(x*<span class="number">2</span>+<span class="number">1</span>,l,r,val);</span><br><span class="line">tr[x].val=tr[x*<span class="number">2</span>].val+tr[x*<span class="number">2</span>+<span class="number">1</span>].val;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">L_Add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">while</span>(top[x]!=top[y])</span><br><span class="line">{</span><br><span class="line"><span class="keyword">if</span>(dep[top[x]]&lt;dep[top[y]])swap(x,y);</span><br><span class="line"><span class="comment">//cout&lt;&lt;x&lt;&lt;" "&lt;&lt;y&lt;&lt;" "&lt;&lt;dep[top[x]]&lt;&lt;" "&lt;&lt;dep[top[y]]&lt;&lt;endl;</span></span><br><span class="line">Add(<span class="number">1</span>,pos[top[x]],pos[x],<span class="number">1</span>);</span><br><span class="line">x=fa[top[x]];</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span>(pos[x]&gt;pos[y])swap(x,y);</span><br><span class="line">Add(<span class="number">1</span>,pos[x],pos[y],<span class="number">1</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> p)</span><span class="comment">//单点查询 </span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="keyword">if</span>(tr[x].l==tr[x].r)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">return</span> tr[x].val;</span><br><span class="line">}</span><br><span class="line">relese(x);</span><br><span class="line"><span class="keyword">int</span> mid=(tr[x].l+tr[x].r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(p&lt;=mid)<span class="keyword">return</span> Query(x*<span class="number">2</span>,p);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> Query(x*<span class="number">2</span>+<span class="number">1</span>,p);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">{</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;x,&amp;y);</span><br><span class="line">e[x].push_back(y);</span><br><span class="line">e[y].push_back(x);</span><br><span class="line">}</span><br><span class="line">dep[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">dfs(<span class="number">1</span>);</span><br><span class="line">dfs2(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">Build(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">{</span><br><span class="line">L_Add(a[i<span class="number">-1</span>],a[i]);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">2</span>!=i)Add(<span class="number">1</span>,pos[a[i<span class="number">-1</span>]],pos[a[i<span class="number">-1</span>]],<span class="number">-1</span>);</span><br><span class="line"><span class="comment">//cout&lt;&lt;a[i-1]&lt;&lt;" "&lt;&lt;a[i]&lt;&lt;endl; </span></span><br><span class="line">}</span><br><span class="line">Add(<span class="number">1</span>,pos[a[n]],pos[a[n]],<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">{</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Query(<span class="number">1</span>,pos[j]));</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;树剖裸题啦&lt;/p&gt;
&lt;p&gt;每走一次路径+1&lt;/p&gt;
&lt;p&gt;最后一个房间答案-1&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://lzylzy.cf/posts/4a17b156/"/>
    <id>http://lzylzy.cf/posts/4a17b156/</id>
    <published>2020-05-02T10:12:05.890Z</published>
    <updated>2020-05-08T10:13:33.025Z</updated>
    
    <content type="html"><![CDATA[<h3 id="啊这里是lzy"><a href="#啊这里是lzy" class="headerlink" title="啊这里是lzy"></a>啊这里是lzy</h3><h3 id="lzy是一个正在初中挣扎的蒟蒻-QAQ"><a href="#lzy是一个正在初中挣扎的蒟蒻-QAQ" class="headerlink" title="lzy是一个正在初中挣扎的蒟蒻   QAQ"></a>lzy是一个正在初中挣扎的蒟蒻   QAQ</h3><h3 id="信竞和文化课都好难嘤嘤嘤"><a href="#信竞和文化课都好难嘤嘤嘤" class="headerlink" title="信竞和文化课都好难嘤嘤嘤"></a>信竞和文化课都好难嘤嘤嘤</h3><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;啊这里是lzy&quot;&gt;&lt;a href=&quot;#啊这里是lzy&quot; class=&quot;headerlink&quot; title=&quot;啊这里是lzy&quot;&gt;&lt;/a&gt;啊这里是lzy&lt;/h3&gt;&lt;h3 id=&quot;lzy是一个正在初中挣扎的蒟蒻-QAQ&quot;&gt;&lt;a href=&quot;#lzy是一个正在初中挣扎的蒟
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
