[{"title":"CF1220D Alex and Julian","date":"2020-05-19T12:49:46.000Z","path":"/posts/ed89373b/","text":"前置知识：二分图的判定没有奇环 做法考虑从0开始，$lcm(a,b)$构成的环为奇环 \\frac { lcm(a,b)} { a }+\\frac{ lcm ( a,b ) } { b} \\equiv 1(mod 2)有 \\frac{a+b}{gcd(a,b)} \\equiv 1(mod 2)当且仅当a,b中2的因子个数相等时，ab无法构成奇环，这种情况下$\\frac{a}{gcd(a,b)}$和$\\frac{b}{gcd(a,b)}$都是奇数 （本句话引自lg大佬，不会可以手动验证，好好想，蒟蒻数学这么差都想通了，画画图） 也就是说，对于任意两个数字，如果他们的lowbit相等，他们不会构成奇环 于是问题变成了 求n个数中lowbit相等的数字最多有多少个 code: 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffint n;#define maxn 200009ll a[maxn]; #define lowbit(x) (x&amp;(-x))vector&lt;ll&gt; num[69];signed main(){ scanf(\"%d\",&amp;n); for(int i=1;i&lt;=n;i++) { scanf(\"%lld\",&amp;a[i]); } //两个数lowbit相同就可以保留 //直接枚举lowbit？ int ans=0,w; for(int i=0;i&lt;=60;i++) { int s=0; for(int j=1;j&lt;=n;j++) { //cout&lt;&lt;lowbit(a[j])&lt;&lt;\" \"&lt;&lt;(1&lt;&lt;i)&lt;&lt;endl; if(lowbit(a[j])==(1ll&lt;&lt;i)) { s++; }else { num[i].push_back(a[j]); } } if(s&gt;ans) { w=i,ans=s; } } printf(\"%d\\n\",n-ans); for(int i=0;i&lt;num[w].size();i++) { printf(\"%lld\\n\",num[w][i]); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P6275 [USACO20OPEN]Sprinklers 2: Return of the Alfalfa P ","date":"2020-05-12T13:41:15.000Z","path":"/posts/5f2781ba/","text":"6275 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788//轮廓线dp/*发现A、C作物之间一定有一条分割线，分割线的拐角处必须放灌溉器，剩下位置可以不放 但是如果要放，放的灌溉器种类是一定的 dp合法轮廓线的数量 设每一条轮廓线的权值是-2^拐角数量 每一次转移，如果拐弯了就要除以二 */ #include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffff#define maxn 2009#define int llint n;char c[maxn][maxn];#define mod 1000000007#define inv (500000004)int f[maxn][maxn];//f表示横着来的 //有什么方法可以转移到f[i][j]?/*f[i][j-1]-&gt;f[i][j]g[i][j-1]/2-&gt;f[i][j]f[i-1][j]/2-&gt;g[i][j]g[i-1][j]-&gt;g[i][j]*/ int g[maxn][maxn];//g表示竖着来的 ll ksm(int a,int b){ ll ans=1,base=a; while(b) { if(b&amp;1) { ans*=base; ans%=mod; } base*=base; base%=mod; } return ans;}signed main(){ scanf(\"%lld\",&amp;n); for(int i=1;i&lt;=n;i++) { scanf(\"%s\",c[i]+1); } for(int i=1;i&lt;=n+1;i++) { f[1][i]=1; g[i][1]=1; } for(int i=2;i&lt;=n+1;i++)//i可以取到n+1 { for(int j=2;j&lt;=n+1;j++) { f[i][j]=f[i][j-1]; if(c[i-1][j-1]!='W')//这边ij从1开始，所以要减一 { f[i][j]=(f[i][j]+(ll)g[i][j-1]*inv)%mod; } g[i][j]=g[i-1][j]; if(c[i-1][j-1]!='W') { g[i][j]=(g[i][j]+(ll)f[i-1][j]*inv)%mod; } // cout&lt;&lt;f[i][j]&lt;&lt;\" \"&lt;&lt;g[i][j]&lt;&lt;endl; } } int ans=(g[n+1][n+1]+f[n+1][n+1])%mod; for(int i=1;i&lt;=n;i++) { for(int j=1;j&lt;=n;j++) { if(c[i][j]!='W') { ans=(ans*2)%mod; } } } printf(\"%lld\\n\",ans); return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"母亲节快乐！","date":"2020-05-10T14:32:34.000Z","path":"/posts/c20ab536/","text":"1.妈妈 你把心铺成路，还怕我磕了脚 alt 2感谢你不是超人，却为我变成了万能 3岁月从不败我的美人妈妈 ️ 4小棉袄会努力成为你的防弹衣 5你说你是妈妈的防弹衣，后来才知道你是妈妈的催泪弹 6别问你妈想要什么礼物，她就是想要我这样的女婿(儿媳妇） alt 7听说神不能无处不在，所以创造了妈妈 8我加倍努力，就是希望成长的脚步，可以赶上您老去的速度 9曾厌恶你的市侩圆滑，却忘了你也曾松花酿酒，春水煮茶 alt 10从前的愿望是仗剑走天涯，现在只想赖在你身边，听你细数年华 11整个世界都在催我长大，而你却心疼我的小翅膀 12羡慕我爸，娶到了世界上最好的女人 alt 13和妈妈吵架的时候，摸摸自己肚子的肉，那是妈妈在外面赚钱养的。 14这个世界上只有你，愿意包容我的一千种任性。 15我快快长大，你慢慢变老ᵀᴴᴱ ᴮᴱˢᵀ ᴵˢ ᶠᴼᴿ ᵞᴼᵁ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P3258","date":"2020-05-07T07:24:38.000Z","path":"/posts/b173244f/","text":"树剖裸题啦 每走一次路径+1 最后一个房间答案-1 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffff#define maxn 300005int fa[maxn],son[maxn],top[maxn],pos[maxn],dfn[maxn],size[maxn],dep[maxn];vector&lt;int&gt; e[maxn];int cnt=0;int n;int a[maxn];struct node{ int l,r; int mark; int val;}tr[maxn*4];void dfs(int x){ size[x]=1; for(int i=0;i&lt;e[x].size();i++) { int to=e[x][i]; if(!size[to]) { dep[to]=dep[x]+1; fa[to]=x; dfs(to); size[x]+=size[to]; if(size[son[x]]&lt;size[to]) { son[x]=to; } } }}void dfs2(int x,int tp){ cnt++; pos[x]=cnt; dfn[cnt]=x; top[x]=tp; if(son[x]!=0)dfs2(son[x],tp); for(int i=0;i&lt;e[x].size();i++) { int to=e[x][i]; if(top[to])continue; dfs2(to,to); }}void Build(int x,int l,int r){ tr[x].l=l,tr[x].r=r; if(l==r) { tr[x].mark=0; tr[x].val=0; return; } int mid=(l+r)&gt;&gt;1; Build(x*2,l,mid); Build(x*2+1,mid+1,r); tr[x].mark=0; tr[x].val=0;}void relese(int x){ if(tr[x].l==tr[x].r||0==tr[x].mark) { return; } int ma=tr[x].mark; int ls=x*2,rs=x*2+1; int lsl=tr[ls].r-tr[ls].l+1; int rsl=tr[rs].r-tr[rs].l+1; tr[ls].val+=lsl*ma; tr[ls].mark+=ma; tr[rs].mark+=ma; tr[rs].val+=rsl*ma; tr[x].mark=0;}void Add(int x,int l,int r,int val){ if(l&lt;=tr[x].l&amp;&amp;tr[x].r&lt;=r) { tr[x].val+=val*(tr[x].r-tr[x].l+1); tr[x].mark+=val; return; } relese(x); int mid=(tr[x].l+tr[x].r)&gt;&gt;1; if(l&lt;=mid)Add(x*2,l,r,val); if(r&gt;mid)Add(x*2+1,l,r,val); tr[x].val=tr[x*2].val+tr[x*2+1].val;}void L_Add(int x,int y){ while(top[x]!=top[y]) { if(dep[top[x]]&lt;dep[top[y]])swap(x,y); // cout&lt;&lt;x&lt;&lt;\" \"&lt;&lt;y&lt;&lt;\" \"&lt;&lt;dep[top[x]]&lt;&lt;\" \"&lt;&lt;dep[top[y]]&lt;&lt;endl; Add(1,pos[top[x]],pos[x],1); x=fa[top[x]]; } if(pos[x]&gt;pos[y])swap(x,y); Add(1,pos[x],pos[y],1);}int Query(int x,int p)//单点查询 { if(tr[x].l==tr[x].r) { return tr[x].val; } relese(x); int mid=(tr[x].l+tr[x].r)&gt;&gt;1; if(p&lt;=mid)return Query(x*2,p); else return Query(x*2+1,p);}signed main(){ scanf(\"%d\",&amp;n); for(int i=1;i&lt;=n;i++) { scanf(\"%d\",&amp;a[i]); } for(int i=1;i&lt;n;i++) { int x,y; scanf(\"%d%d\",&amp;x,&amp;y); e[x].push_back(y); e[y].push_back(x); } dep[1]=1; dfs(1); dfs2(1,1); Build(1,1,n); for(int i=2;i&lt;=n;i++) { L_Add(a[i-1],a[i]); if(2!=i)Add(1,pos[a[i-1]],pos[a[i-1]],-1); // cout&lt;&lt;a[i-1]&lt;&lt;\" \"&lt;&lt;a[i]&lt;&lt;endl; } Add(1,pos[a[n]],pos[a[n]],-1); for(int j=1;j&lt;=n;j++) { printf(\"%d\\n\",Query(1,pos[j])); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"Hello World","date":"2020-05-02T10:12:05.890Z","path":"/posts/4a17b156/","text":"啊这里是lzylzy是一个正在初中挣扎的蒟蒻 QAQ信竞和文化课都好难嘤嘤嘤 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]}]