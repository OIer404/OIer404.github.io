[{"title":"P1127 词链","date":"2020-07-13T10:32:41.000Z","path":"/posts/aedc3926/","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffint n;#define maxn 1009string x[maxn];vector&lt;int&gt; son[maxn],num[maxn];int h[maxn];//出现次数 int t[maxn];//作为首次出现的 入度比出度大1 //要是找不到 就按照第一个来//剩下部分通过搜索解决bool vis[maxn];bool ok=0;void dfs(int rt,string now,int tot){ //cout&lt;&lt;rt&lt;&lt;\" \"&lt;&lt;now&lt;&lt;\" \"&lt;&lt;tot&lt;&lt;endl; if(ok)return; if(tot==n) { cout&lt;&lt;now&lt;&lt;endl; ok=1; return; } for(int i=0;i&lt;son[rt].size();i++) { int to=son[rt][i]; int nt=num[rt][i]; if(vis[nt])continue; vis[nt]=1; dfs(to,now+\".\"+x[nt],tot+1); vis[nt]=0; }}int fa[maxn];int Find(int x){ if(fa[x]==x)return x; return fa[x]=Find(fa[x]);}bool app[99];signed main(){ scanf(\"%d\",&amp;n); for(int i=0;i&lt;=n;i++)fa[i]=i; for(int i=1;i&lt;=n;i++)//连边 { cin&gt;&gt;x[i]; } sort(x+1,x+1+n); for(int i=1;i&lt;=n;i++) { son[x[i][0]-'a'].push_back(x[i][x[i].size()-1]-'a'); num[x[i][0]-'a'].push_back(i); h[x[i][0]-'a']++; t[x[i][x[i].size()-1]-'a']++; app[x[i][x[i].size()-1]-'a']=1; app[x[i][0]-'a']=1; fa[x[i][0]-'a']=Find(x[i][x[i].size()-1]-'a'); } //确定第一个出现的 int af=-inf; int s=x[1][0]-'a';//默认1 for(int i=0;i&lt;26;i++) { if(app[i]) { if(af==-inf)af=Find(i); else { if(Find(i)!=af) { printf(\"***\"); return 0; } } if(h[i]-t[i]==1) { s=i; } } } for(int i=0;i&lt;1;i++) { vis[num[s][i]]=1; dfs(son[s][i],x[num[s][i]],1); vis[num[s][i]]=0; } if(!ok) { printf(\"***\"); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P1801 黑匣子","date":"2020-07-12T07:00:02.000Z","path":"/posts/fd017f76/","text":"对顶堆 发现i是单调不降的，可以使用对顶堆解决问题 类似问题：P1168中位数 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffpriority_queue&lt;int,vector&lt;int&gt;,greater&lt;int&gt; &gt; q2;//小的在上头priority_queue&lt;int&gt; q1;//大的在上头，大小控制为i int a[200009],t[200009];signed main(){ //freopen(\"h.in\",\"r\",stdin); int n,m; scanf(\"%d%d\",&amp;m,&amp;n); for(int i=1;i&lt;=m;i++)scanf(\"%d\",&amp;a[i]); int j=1; for(int i=1;i&lt;=n;i++) { int x; scanf(\"%d\",&amp;x); for(;j&lt;=x;j++) { q1.push(a[j]); while(q1.size()&lt;i)//保证q1的长度为i { q1.push(q2.top()); q2.pop(); } while(q1.size()&gt;i) { q2.push(q1.top()); q1.pop(); } while(!q1.empty()&amp;&amp;!q2.empty()&amp;&amp;q1.top()&gt;q2.top())//保证q1的top更小 { int l=q1.top(),k=q2.top(); q1.pop();q2.pop(); q2.push(l);q1.push(k); } //printf(\"i:%dj:%d %d\\n\",i,j,q1.top()); } while(q1.size()&lt;i) { q1.push(q2.top()); q2.pop(); } while(q1.size()&gt;i) { q2.push(q1.top()); q1.pop(); } while(!q1.empty()&amp;&amp;!q2.empty()&amp;&amp;q1.top()&gt;q2.top()) { int l=q1.top(),k=q2.top(); q1.pop();q2.pop(); q2.push(l);q1.push(k); } printf(\"%d\\n\",q1.top()); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"myx","date":"2020-07-10T09:22:08.000Z","path":"/posts/1f6dbad0/","text":"愿君一路星光、前程似锦，所得皆所愿、扬帆起远航、不负青春梦！他日江湖再相见，历经千帆仍少年～ 李佩璇 祝愿帅气的马宇轩同学在新的学校里闪闪发光，熠熠生辉，实现自己的理想，学业有成，前程似锦，一路星光！ 王一诺 也许这是短暂的两年吧，未来的道路依然漫长。愿我们都能 “长风破浪会有时，直挂云帆济沧海”。希望这份情谊，永存。 lzy m f b document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P1621 集合","date":"2020-06-21T10:58:12.000Z","path":"/posts/2f1e5e04/","text":"用埃筛枚举质数作为质因子，看看能不能变成区间里的数字 12345678910111213141516171819202122232425262728293031323334353637#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffint fa[100020];int v[100020];int a,b,p,s=0;;int Find(int x){ if(x==fa[x])return x; return fa[x]=Find(fa[x]);}signed main(){ scanf(\"%d%d%d\",&amp;a,&amp;b,&amp;p); for(int i=1;i&lt;=b;i++)fa[i]=i; for(int i=2;i&lt;=b;i++) { if(!v[i]) { for(int j=i;j&lt;=b;j+=i) { v[j]=1; if(i&gt;=p&amp;&amp;j-i&gt;=a) { if(Find(j)!=Find(j-i)) { fa[Find(j)]=Find(j-i); s++; } } } } } printf(\"%d\\n\",b-a+1-s); return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P3613 【深基15.例2】寄包柜","date":"2020-06-21T10:57:21.000Z","path":"/posts/5d1bcc2a/","text":"123456789101112131415161718192021222324#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffint n,m;map&lt;pair&lt;int,int&gt;,int&gt; mp;//直接用map映射pair实现 signed main(){ scanf(\"%d%d\",&amp;n,&amp;m); while(m--) { int opt,x,y,z; scanf(\"%d%d%d\",&amp;opt,&amp;x,&amp;y); if(opt==1) { scanf(\"%d\",&amp;z); mp[make_pair(x,y)]=z; }else { printf(\"%d\\n\",mp.count(make_pair(x,y))==0?0:mp[make_pair(x,y)]); } } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P4715 【深基16.例1】淘汰赛","date":"2020-06-21T10:56:09.000Z","path":"/posts/27fe52af/","text":"123456789101112131415161718#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffint a[250];signed main(){ int n; scanf(\"%d\",&amp;n); n=1&lt;&lt;n; for(int i=0;i&lt;n;i++) { scanf(\"%d\",&amp;a[i]); } //上半区的最大值 下半区的最大值 两个中较小的一个就是答案 cout&lt;&lt;max_element(a,a+n/2)-max_element(a,a+n)+max_element(a+n/2,a+n)-a+1&lt;&lt;endl; return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P3884 [JLOI2009]二叉树问题","date":"2020-06-21T10:55:20.000Z","path":"/posts/13a5bcc7/","text":"123456789101112131415161718192021222324252627282930313233343536373839#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffint c[120],d[120],f[120];int x,y,n;signed main(){ scanf(\"%d\",&amp;n); int md=0; c[d[1]]++; for(int i=1;i&lt;n;i++) { int x,y; scanf(\"%d%d\",&amp;x,&amp;y); f[y]=x; d[y]=d[x]+1; md=max(md,d[y]); c[d[y]]++;//宽度就是某一个深度的节点个数 }int mc=1; for(int i=1;i&lt;=n;i++)mc=max(mc,c[i]); int x,y; scanf(\"%d%d\",&amp;x,&amp;y); int z=0; while(x!=y) { if(d[x]&lt;d[y]) { y=f[y]; z++; }else { x=f[x]; z+=2; } } printf(\"%d\\n%d\\n%d\",md+1,mc,z); return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P1364 医院设置","date":"2020-06-21T10:54:30.000Z","path":"/posts/d3586754/","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffint s[120];//sizeint f[120];int l[120];//lsonint r[120];//rsonint n;void dfs(int x){ if(x) { dfs(l[x]); s[x]+=s[l[x]]; f[x]+=f[l[x]]+s[l[x]]; dfs(r[x]); s[x]+=s[r[x]]; f[x]+=f[r[x]]+s[r[x]]; }}signed main(){ scanf(\"%d\",&amp;n); for(int i=1;i&lt;=n;i++) { scanf(\"%d%d%d\",&amp;s[i],&amp;l[i],&amp;r[i]); } dfs(1); int x=1,z=f[x]; while(1) { if(s[l[x]]*2&gt;s[1])//左边人多，他的两倍比总人数多 { z+=s[1]-2*s[l[x]];//往左走 x=l[x]; }else if(s[r[x]]*2&gt;s[1])//同理往右 { z+=s[1]-2*s[r[x]]; x=r[x]; }else break; } printf(\"%d\\n\",z); return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P1160 队列安排","date":"2020-06-21T08:48:39.000Z","path":"/posts/b71d7c5c/","text":"1234567891011121314151617181920212223242526272829303132333435363738394041#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffff#define maxn 100020int l[maxn],r[maxn],v[maxn];void dfs(int x){ if(!x)return; dfs(l[x]); if(!v[x])cout&lt;&lt;x&lt;&lt;\" \"; dfs(r[x]);}signed main(){ int n; scanf(\"%d\",&amp;n); for(int i=2;i&lt;=n;i++) { int x,y; scanf(\"%d%d\",&amp;x,&amp;y); if(y==0)//加入，替换掉原来这个位置的人把他接到这个加入的人后面 { l[i]=l[x]; l[x]=i; }else//同理 { r[i]=r[x]; r[x]=i; } } scanf(\"%d\",&amp;n); for(int i=1;i&lt;=n;i++) { int x; scanf(\"%d\",&amp;x); v[x]=1; } dfs(1); return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P4387【深基15.习9】验证栈序列","date":"2020-06-21T08:27:48.000Z","path":"/posts/b494a7bf/","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243#include&lt;bits/stdc++.h&gt;//一直push，直到匹配到一个pop /*栗子： 1 2 3 4 55 4 3 2 1用一个栈模拟，一直入队直到当前入队的是出栈队列的第一项 出栈，继续模拟 */using namespace std;#define ll long long#define inf 0x7fffffffint s[200020],ss;int a[100020]; int n;signed main(){ int T; scanf(\"%d\",&amp;T); while(T--) { ss=0; memset(s,0,sizeof(s)); scanf(\"%d\",&amp;n); for(int i=0;i&lt;n;i++)scanf(\"%d\",&amp;a[i]); for(int i=0,j=0;j&lt;n;j++) { int x; scanf(\"%d\",&amp;x); while(i&lt;n&amp;&amp;(s[ss]!=x)) { s[++ss]=a[i++]; } if(s[ss]==x) { ss--; } } puts(ss&gt;0?\"No\":\"Yes\"); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P5250【深基17.例5】木材仓库","date":"2020-06-21T07:22:54.000Z","path":"/posts/9462a6a7/","text":"水一发板子题 合理使用map和c++11 auto类型可以自动识别，在c++11下，可以节省很多代码 这里用auto代替了iterator 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffsigned main(){ map &lt;string,int&gt; mp; int n; cin&gt;&gt;n; while(n--) { int opt; cin&gt;&gt;opt; if(opt==1) { string name; int sc; cin&gt;&gt;name&gt;&gt;sc; mp[name]=sc; cout&lt;&lt;\"OK\"&lt;&lt;endl; }else if(opt!=4) { string name; cin&gt;&gt;name; auto it=mp.find(name); if(opt==2) { if(it!=mp.end()) { cout&lt;&lt;mp[name]&lt;&lt;endl; }else { cout&lt;&lt;\"Not found\"&lt;&lt;endl; } }else if(opt==3) { if(it!=mp.end()) { mp.erase(name); cout&lt;&lt;\"Deleted successfully\"&lt;&lt;endl; }else { cout&lt;&lt;\"Not found\"&lt;&lt;endl; } } }else cout&lt;&lt;mp.size()&lt;&lt;endl; } return 0;}//c++11 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"如何安全的举报自己的学校？","date":"2020-05-21T13:39:08.000Z","path":"/posts/ada246ea/","text":"蒟蒻开学了emm 今天教教大家两种安全举报学校的方法 法1首先，找到你所在省/市的教育主管部门由于咱们是山东人，所以找到山东省教育厅:http://edu.shandong.gov.cn/ 重点，什么信访条例，什么匿名不公开，全部是假的，举报不能留下任何个人身份信息，包括自己的ip地址 接下来，连接到VPN是的，根据前人的惨痛教训你的IP可能会被卖掉 这边奉上百度第一条https://www.xicidaili.com/nn/ 最好是高匿代理，国内外都可 注意，有很多代理简直上不了网，可以多试几个，另外不要输入敏感信息，因为你所有联网的数据都会发送给代理服务器，最好退掉微信QQ啥的，搞完之后一定断开代理 连接方法： PC：https://jingyan.baidu.com/article/6fb756ec5f5dd4241858fb85.html 手机：https://jingyan.baidu.com/article/6fb756ec5f5dd4241858fb85.html 填写信息这边山东省教育厅需要点击“留言咨询” a 姓名瞎编，手机号和邮箱一定要使用临时的 这边有一篇推荐临时邮箱的文章：https://www.jianshu.com/p/adc971eb5cfe https://temp-mail.org/ 这个我觉得速度还行，其他的要么时间短，要么上不去 临时手机号来这里：https://www.materialtools.com/ 证件的话，如果必须填真实的，不要写你自己或者家人，最好找一个和你们学校和你关系不大的人，当然，搞个假的最好 剩下的大家随意发挥，切记不要留下任何真实信息（除了举报内容 本方法有一定暴露风险~不过应该不大，我觉得防护措施已经足够严密了2333 小心内鬼 法2写封信不就完了 不要留下真实信息，直接寄到教育局，谁都查不出来hhhh document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"CF1178D Prime Graph","date":"2020-05-21T13:38:00.000Z","path":"/posts/2a07be94/","text":"1234567891011121314151617181920212223242526272829303132333435363738/*显然1000以内，n到3/2n中肯定有一个质数（没有证明，但是可以枚举试试 所以 先把n个点连成环，在中间两点之间加边，每个点的度为2或3，控制边数是个质数就可以 */#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffbool Prime(int x){ for(int i=2;i&lt;=sqrt(x);i++) { if(x%i==0)return 0; } return 1;}signed main(){ int n; cin&gt;&gt;n; int m=n; while(!Prime(m)) { m++; } cout&lt;&lt;m&lt;&lt;endl; for(int i=1;i&lt;=n;i++) { int x=i+1; if(x&gt;n)x=1; cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;x&lt;&lt;endl; } for(int i=1;i&lt;=m-n;i++) { cout&lt;&lt;i&lt;&lt;\" \"&lt;&lt;n/2+i&lt;&lt;endl; } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"CF1220D Alex and Julian","date":"2020-05-19T12:49:46.000Z","path":"/posts/ed89373b/","text":"前置知识：二分图的判定没有奇环 做法考虑从0开始，$lcm(a,b)$构成的环为奇环 \\frac { lcm(a,b)} { a }+\\frac{ lcm ( a,b ) } { b} \\equiv 1(mod 2)有 \\frac{a+b}{gcd(a,b)} \\equiv 1(mod 2)当且仅当a,b中2的因子个数相等时，ab无法构成奇环，这种情况下$\\frac{a}{gcd(a,b)}$和$\\frac{b}{gcd(a,b)}$都是奇数 （本句话引自lg大佬，不会可以手动验证，好好想，蒟蒻数学这么差都想通了，画画图） 也就是说，对于任意两个数字，如果他们的lowbit相等，他们不会构成奇环 于是问题变成了 求n个数中lowbit相等的数字最多有多少个 code: 123456789101112131415161718192021222324252627282930313233343536373839404142434445#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffffint n;#define maxn 200009ll a[maxn]; #define lowbit(x) (x&amp;(-x))vector&lt;ll&gt; num[69];signed main(){ scanf(\"%d\",&amp;n); for(int i=1;i&lt;=n;i++) { scanf(\"%lld\",&amp;a[i]); } //两个数lowbit相同就可以保留 //直接枚举lowbit？ int ans=0,w; for(int i=0;i&lt;=60;i++) { int s=0; for(int j=1;j&lt;=n;j++) { //cout&lt;&lt;lowbit(a[j])&lt;&lt;\" \"&lt;&lt;(1&lt;&lt;i)&lt;&lt;endl; if(lowbit(a[j])==(1ll&lt;&lt;i)) { s++; }else { num[i].push_back(a[j]); } } if(s&gt;ans) { w=i,ans=s; } } printf(\"%d\\n\",n-ans); for(int i=0;i&lt;num[w].size();i++) { printf(\"%lld\\n\",num[w][i]); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P6275 [USACO20OPEN]Sprinklers 2: Return of the Alfalfa P ","date":"2020-05-12T13:41:15.000Z","path":"/posts/5f2781ba/","text":"6275 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788//轮廓线dp/*发现A、C作物之间一定有一条分割线，分割线的拐角处必须放灌溉器，剩下位置可以不放 但是如果要放，放的灌溉器种类是一定的 dp合法轮廓线的数量 设每一条轮廓线的权值是-2^拐角数量 每一次转移，如果拐弯了就要除以二 */ #include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffff#define maxn 2009#define int llint n;char c[maxn][maxn];#define mod 1000000007#define inv (500000004)int f[maxn][maxn];//f表示横着来的 //有什么方法可以转移到f[i][j]?/*f[i][j-1]-&gt;f[i][j]g[i][j-1]/2-&gt;f[i][j]f[i-1][j]/2-&gt;g[i][j]g[i-1][j]-&gt;g[i][j]*/ int g[maxn][maxn];//g表示竖着来的 ll ksm(int a,int b){ ll ans=1,base=a; while(b) { if(b&amp;1) { ans*=base; ans%=mod; } base*=base; base%=mod; } return ans;}signed main(){ scanf(\"%lld\",&amp;n); for(int i=1;i&lt;=n;i++) { scanf(\"%s\",c[i]+1); } for(int i=1;i&lt;=n+1;i++) { f[1][i]=1; g[i][1]=1; } for(int i=2;i&lt;=n+1;i++)//i可以取到n+1 { for(int j=2;j&lt;=n+1;j++) { f[i][j]=f[i][j-1]; if(c[i-1][j-1]!='W')//这边ij从1开始，所以要减一 { f[i][j]=(f[i][j]+(ll)g[i][j-1]*inv)%mod; } g[i][j]=g[i-1][j]; if(c[i-1][j-1]!='W') { g[i][j]=(g[i][j]+(ll)f[i-1][j]*inv)%mod; } // cout&lt;&lt;f[i][j]&lt;&lt;\" \"&lt;&lt;g[i][j]&lt;&lt;endl; } } int ans=(g[n+1][n+1]+f[n+1][n+1])%mod; for(int i=1;i&lt;=n;i++) { for(int j=1;j&lt;=n;j++) { if(c[i][j]!='W') { ans=(ans*2)%mod; } } } printf(\"%lld\\n\",ans); return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"母亲节快乐！","date":"2020-05-10T14:32:34.000Z","path":"/posts/c20ab536/","text":"1.妈妈 你把心铺成路，还怕我磕了脚 alt 2感谢你不是超人，却为我变成了万能 3岁月从不败我的美人妈妈 ️ 4小棉袄会努力成为你的防弹衣 5你说你是妈妈的防弹衣，后来才知道你是妈妈的催泪弹 6别问你妈想要什么礼物，她就是想要我这样的女婿(儿媳妇） alt 7听说神不能无处不在，所以创造了妈妈 8我加倍努力，就是希望成长的脚步，可以赶上您老去的速度 9曾厌恶你的市侩圆滑，却忘了你也曾松花酿酒，春水煮茶 alt 10从前的愿望是仗剑走天涯，现在只想赖在你身边，听你细数年华 11整个世界都在催我长大，而你却心疼我的小翅膀 12羡慕我爸，娶到了世界上最好的女人 alt 13和妈妈吵架的时候，摸摸自己肚子的肉，那是妈妈在外面赚钱养的。 14这个世界上只有你，愿意包容我的一千种任性。 15我快快长大，你慢慢变老ᵀᴴᴱ ᴮᴱˢᵀ ᴵˢ ᶠᴼᴿ ᵞᴼᵁ document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"P3258","date":"2020-05-07T07:24:38.000Z","path":"/posts/b173244f/","text":"树剖裸题啦 每走一次路径+1 最后一个房间答案-1 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147#include&lt;bits/stdc++.h&gt;using namespace std;#define ll long long#define inf 0x7fffffff#define maxn 300005int fa[maxn],son[maxn],top[maxn],pos[maxn],dfn[maxn],size[maxn],dep[maxn];vector&lt;int&gt; e[maxn];int cnt=0;int n;int a[maxn];struct node{ int l,r; int mark; int val;}tr[maxn*4];void dfs(int x){ size[x]=1; for(int i=0;i&lt;e[x].size();i++) { int to=e[x][i]; if(!size[to]) { dep[to]=dep[x]+1; fa[to]=x; dfs(to); size[x]+=size[to]; if(size[son[x]]&lt;size[to]) { son[x]=to; } } }}void dfs2(int x,int tp){ cnt++; pos[x]=cnt; dfn[cnt]=x; top[x]=tp; if(son[x]!=0)dfs2(son[x],tp); for(int i=0;i&lt;e[x].size();i++) { int to=e[x][i]; if(top[to])continue; dfs2(to,to); }}void Build(int x,int l,int r){ tr[x].l=l,tr[x].r=r; if(l==r) { tr[x].mark=0; tr[x].val=0; return; } int mid=(l+r)&gt;&gt;1; Build(x*2,l,mid); Build(x*2+1,mid+1,r); tr[x].mark=0; tr[x].val=0;}void relese(int x){ if(tr[x].l==tr[x].r||0==tr[x].mark) { return; } int ma=tr[x].mark; int ls=x*2,rs=x*2+1; int lsl=tr[ls].r-tr[ls].l+1; int rsl=tr[rs].r-tr[rs].l+1; tr[ls].val+=lsl*ma; tr[ls].mark+=ma; tr[rs].mark+=ma; tr[rs].val+=rsl*ma; tr[x].mark=0;}void Add(int x,int l,int r,int val){ if(l&lt;=tr[x].l&amp;&amp;tr[x].r&lt;=r) { tr[x].val+=val*(tr[x].r-tr[x].l+1); tr[x].mark+=val; return; } relese(x); int mid=(tr[x].l+tr[x].r)&gt;&gt;1; if(l&lt;=mid)Add(x*2,l,r,val); if(r&gt;mid)Add(x*2+1,l,r,val); tr[x].val=tr[x*2].val+tr[x*2+1].val;}void L_Add(int x,int y){ while(top[x]!=top[y]) { if(dep[top[x]]&lt;dep[top[y]])swap(x,y); // cout&lt;&lt;x&lt;&lt;\" \"&lt;&lt;y&lt;&lt;\" \"&lt;&lt;dep[top[x]]&lt;&lt;\" \"&lt;&lt;dep[top[y]]&lt;&lt;endl; Add(1,pos[top[x]],pos[x],1); x=fa[top[x]]; } if(pos[x]&gt;pos[y])swap(x,y); Add(1,pos[x],pos[y],1);}int Query(int x,int p)//单点查询 { if(tr[x].l==tr[x].r) { return tr[x].val; } relese(x); int mid=(tr[x].l+tr[x].r)&gt;&gt;1; if(p&lt;=mid)return Query(x*2,p); else return Query(x*2+1,p);}signed main(){ scanf(\"%d\",&amp;n); for(int i=1;i&lt;=n;i++) { scanf(\"%d\",&amp;a[i]); } for(int i=1;i&lt;n;i++) { int x,y; scanf(\"%d%d\",&amp;x,&amp;y); e[x].push_back(y); e[y].push_back(x); } dep[1]=1; dfs(1); dfs2(1,1); Build(1,1,n); for(int i=2;i&lt;=n;i++) { L_Add(a[i-1],a[i]); if(2!=i)Add(1,pos[a[i-1]],pos[a[i-1]],-1); // cout&lt;&lt;a[i-1]&lt;&lt;\" \"&lt;&lt;a[i]&lt;&lt;endl; } Add(1,pos[a[n]],pos[a[n]],-1); for(int j=1;j&lt;=n;j++) { printf(\"%d\\n\",Query(1,pos[j])); } return 0;} document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]},{"title":"Hello World","date":"2020-05-02T10:12:05.890Z","path":"/posts/4a17b156/","text":"啊这里是lzylzy是一个正在初中挣扎的蒟蒻 QAQ信竞和文化课都好难嘤嘤嘤 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","tags":[]}]